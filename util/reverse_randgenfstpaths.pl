#!/usr/bin/perl
#
# Print all the paths generated by an FST produced 
# by the command: fstrandgen

$argerr = 0;
$id = "";
$relabel_eps = 0;
$eps_symbol = "@";
while ((@ARGV) && ($argerr == 0)) {
	if($ARGV[0] eq "--relabel-eps") {
		shift @ARGV;
		$relabel_eps = 1;
	} elsif ($ARGV[0] eq "--eps-symbol") {
		shift @ARGV;
		$eps_symbol = shift @ARGV;
	} elsif ($id eq "") {
		$id = shift @ARGV;
	} else {
		$argerr = 1;
	}
}

$argerr = 1 if ($id eq "");

if($argerr == 1) {
	print "Usage: [--relabel-eps]  [--eps-symbol <eps symbol>] <utterance id>\n";
	print "Input: fstrandgen output file\n";
	print "Output: sequence of all paths in it \n";
	exit(1);
}


%arcmap = ();

%startstate_map = ();

while(<STDIN>) {
	chomp;
	@fields = split(/\s+/);
	if($fields[0] == 0) {
		die "Cannot have two paths starting at the same state" if(exists $startstate_map{$fields[1]});
		$startstate_map{$fields[1]} = $fields[3];
	} elsif($#fields > 2) { #arc
		if(exists $startstate_map{$fields[0]}) {
			print "$id";
			if($startstate_map{$fields[0]} ne "-") { 
				print " $startstate_map{$fields[0]}";
			}
		}
		print " $eps_symbol" if ($relabel_eps == 1 && $fields[3] eq "-"); 
		print " $fields[3]" if  $fields[3] ne "-"; 
	} else { #final state
		print "\n";
	}
}

